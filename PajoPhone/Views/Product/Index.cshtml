@model PajoPhone.Models.FilterViewModel
@{
    Layout = "_IndexLayout";
    Model.CategoryId = 10;
}
  <!DOCTYPE html>
  <html lang="fa" dir="rtl">
  <head>
      <meta charset="UTF-8" />
      <meta http-equiv="X-UA-Compatible" content="IE=edge" />
      <meta name="viewport" content="width=device-width, initial-scale=1.0" />
      <title>Pajo Phone</title>
  </head>
  <style>
      #loading {
          display: none;
          position: absolute;
          top: 50%;
          left: 40%;
          transform: translate(-50%, -50%);
          border: 16px solid #f3f3f3;
          border-radius: 50%;
          border-top: 16px solid #FFA500;
          width: 120px;
          height: 120px;
          animation: spin 1s linear infinite;
      }
  
      @@keyframes spin {
          0% { transform: rotate(0deg); }
          100% { transform: rotate(360deg); }
      }
  </style>
  <body class="bg-gray-100">
  <!--  navbar -->
  <nav class="sticky top-0 z-10 block p-4 bg-white shadow-lg md:mb-8 ">
      <div class="container flex items-center justify-between mx-auto max-w-screen-2xl">
          <div class="p-4 md:hidden">
              <button onclick="OpenFilterBar()" class="text-orange-500 focus:outline-none">
                  <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16m-7 6h7"></path>
                  </svg>
              </button>
          </div>
          <ul class="flex items-center gap-x-0 lg:gap-x-4 text-slate-800 lg:text-lg">
              <li>
                  <a class="block px-4 py-2 font-bold text-orange-500 transition-all duration-500 rounded-md hover:bg-gray-100" href="#">PajoPhone</a>
              </li>
          </ul>
          <div class="flex-1 max-w-xl mr-4">
              <div class="flex items-center p-1 bg-gray-100 rounded-lg">
                  <input type="text" id="search-bar"  placeholder="نام محصول ..." class="w-full p-2 bg-transparent focus:outline-none text-slate-800" />
              </div>
          </div>
      </div>
  </nav>
  <!-- content -->
  <div class="container md:px-4 lg:px-6  mx-auto xl:max-w-screen-2xl grid grid-cols-12 md:grid-rows-[55px_minmax(500px,_1fr)] md:gap-8">
      <div class="col-span-12 row-span-2 md:block lg:col-span-3 xl:col-span-2">
          <div id="filtering-backdrop" class="hidden fixed inset-0 bg-black bg-opacity-50 md:hidden"></div>
          <div id="filtering-bar" class="hidden md:block bg-white p-5 md:rounded-xl max-h-[calc(100vh_-_140px)] overflow-y-auto sticky md:top-28 md:static md:max-h-full">
              <div>
                  <form id="product-filter-form"  enctype="application/x-www-form-urlencoded">
                      <input name="Term" class="hidden" id="hidden-search-bar"/>
                      <div class="text-xl font-bold text-orange-500">دسته بندی ها</div>
                      <input type="hidden" id="selectedCategoryId" name="CategoryId"/>
                      <div class="h-64 overflow-y-scroll p-3 mb-3">
                          @await Html.PartialAsync("_CategoryTreePartial")
                      </div>
                      <hr class="my-2"/>
                      <div class="mb-2 text-xl font-bold text-orange-500">فیلتر ها</div>
                      <div class="w-20 my-2" id="select-container">
                      </div>
                      <hr class="my-2"/>
                      <div>
                          <div class="mb-5 text-xl font-bold text-orange-500">قیمت</div>
                          <div class="mb-4">
                              <input type="range" id="price-range" name="MinPrice" class="w-full accent-orange-500" min="0" max="1000" value="0" oninput="UpdatePrice(this.value)">
                          </div>
                          <div class="flex justify-between text-gray-500">
                              <span id="minPrice">$0</span>
                              <span id="maxPrice">$1000</span>
                          </div>
                      </div>
                      <input id="pagination" type="hidden" name="PageNo" value="1"/>
                  </form>
          </div>
      </div>
      
  </div>
      <div  class="col-span-12 md:col-span-8 lg:col-span-9 xl:col-span-10">
          <div id="products-container" class="grid grid-cols-2 px-2 gap-x-2 gap-y-4 lg:grid-cols-4 md:p-0 sm:gap-x-4 md:gap-x-6 md:gap-y-10"></div>
      </div>
      </div>
      <div id="modal-container"></div>
  <div id="loading" style="display: none;"></div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.3.12/jstree.min.js"></script>    
  <script>
      $(document).ready(function () {
          $.ajax({
              url: '@Url.Action("GetProductCards", "Product")',
              type: 'GET',
              contentType: 'application/json',
                    success: function (result) {
                  $('#products-container').html(result);
              },
      });
    $('#product-filter-form').on('change', 'input, select, textarea, span', function () {
              var formData = $("#product-filter-form").serialize();
                          $("#loading").show();
                          setTimeout(function() {
                          $("#loading").hide(); 
              $.ajax({
                  url: '@Url.Action("GetProductCards", "Product" )?' + formData,
                  type: 'GET',
                  contentType: 'application/json',
                  success: function(response) {
                  $('#products-container').html(response);
                  },
                  error: function() {
                      console.error('An error occurred while submitting the form.');
                  }
              });
               },200);
         });
      $(document).on("click",".show-modal",function (e){
          var id = $(e.target).parents(".product-card").attr("data-id");
          $.ajax({
              url: '@Url.Action("GetProductModal", "Product" )'+ "?productId=" + id,
              type: 'GET',
              success: function (result) {
                  $('#modal-container').html(result);
                  OpenModal();
              },
              error: function (xhr, status, error) {
                  console.error(error);
              }
          });
      })
      $("#search-bar").on("keyup" , function(){
          var term= $(this).val();
          $("#hidden-search-bar").val(term).change();
      });
      $('#categoryTree').on("select_node.jstree", function (e, data) {
          var categoryId = data.node.id;
          $('#selectedCategoryId').val(categoryId).change();
          $.ajax({
              url: '@Url.Action("GetKeyValues", "Product")',
              data: { categoryId: categoryId },
              success: function (items) {
                  var $container = $("#select-container"); 
                  $container.empty(); 
                  var counter=0;
                  $.each(items, function (key, values) {
                    
                      var $label = $('<label>', {
                          text: key,
                          class: 'text-orange-500 ml-2'
                      });
                      var $select = $('<select>', {
                          class: 'form-control key-select',
                          'data-key': key,
                          name : `FieldsValueViewModels[${counter}].StringValue`
                      });
                      $container.append($label).append($select);
                      var $input = $('<input>' ,{
                            value : values[0].keyId ,
                            class: 'hidden',
                            name : `FieldsValueViewModels[${counter}].keyId`
                      });
                      $container.append($input);
                      $select.append($('<option>', {
                          value: '',
                          text: 'Select an option'
                      }));
                      $.each(values, function (index, kv) {
                          var option = $('<option>', {
                              value: kv.stringValue, 
                              text: kv.stringValue
                          });
                          $select.append(option);
                      });
                          $select.select2({
                          placeholder: "Select an option",
                          allowClear: true
                      });
                          counter++;
                  });
              },
              error: function () {
                  console.error("Error retrieving key values.");
              }
          });
      });
      });     
         </script>
  <script src="~/js/Index.js"></script>
  </body>
  </html>
  
  